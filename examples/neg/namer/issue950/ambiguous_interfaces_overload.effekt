interface Greet { def sayHello(): Unit }
interface Welcome { def sayHello(): Unit }

def helloWorld() = try {
  sayHello() 
  //[info] /home/jakub/Code/Effekt/effekt/examples/neg/namer/issue950/ambiguous_interfaces_overload.effekt:5:5: There is an equally named effect operation sayHello of interface Greet. Use syntax `do sayHello()` to call it.
  //     sayHello() 
  //     ^^^^^^^^
  // [info] /home/jakub/Code/Effekt/effekt/examples/neg/namer/issue950/ambiguous_interfaces_overload.effekt:5:5: There is an equally named effect operation sayHello of interface Welcome. Use syntax `do sayHello()` to call it.
  //     sayHello() 
  //     ^^^^^^^^
  // [error] /home/jakub/Code/Effekt/effekt/examples/neg/namer/issue950/ambiguous_interfaces_overload.effekt:5:5: Cannot find a function named `sayHello`.
  //     sayHello() 
  //     ^^^^^^^^

  } with Greet {
  def sayHello() = { println("Hello from Greet!"); resume(()) }
}

def main() = {
  helloWorld() // throws: Cannot find a function named `sayHello`
}